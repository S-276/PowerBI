version: '3'
volumes:
  postgres_data:
  airflow_data:

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
      TZ: UTC
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow-webserver:
    image: apache/airflow:2.8.1
    restart: always
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW_DATA: /opt/airflow/data
      TZ: UTC
      AIRFLOW__WEBSERVER__SECRET_KEY: "your_secret_key"  # Ensure consistent secret key
    volumes:
      - D:\Documents\UK\University\BI\Repo\airflow-etl\dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - D:\Documents\UK\University\BI\Repo\airflow-etl\data:/opt/airflow/data:rw  # Ensure read-write permissions
    ports:  # Ensure port 8081 is available or change to another unused port
      - "8081:8080"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.8.1
    restart: always
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
      AIRFLOW_DATA: /opt/airflow/data
      TZ: UTC
      AIRFLOW__WEBSERVER__SECRET_KEY: "your_secret_key"  # Ensure consistent secret key
    volumes:
      - D:\Documents\UK\University\BI\Repo\airflow-etl\dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - D:\Documents\UK\University\BI\Repo\airflow-etl\data:/opt/airflow/data:rw  # Ensure read-write permissions
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: scheduler

  airflow-init:
    image: apache/airflow:2.8.1
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
      AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
      TZ: UTC
    volumes:
      - D:\Documents\UK\University\BI\Repo\airflow-etl\dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - D:\Documents\UK\University\BI\Repo\airflow-etl\data:/opt/airflow/data:rw  # Ensure read-write permissions
    entrypoint: >
      bash -c "airflow db migrate &&
               airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"
    depends_on:
      postgres:
        condition: service_healthy

  ntpd:
    image: cturra/ntp
    restart: always
    environment:
      TZ: UTC
    ports:
      - "123:123/udp"
